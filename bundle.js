!function(I){var g={};function n(t){if(g[t])return g[t].exports;var C=g[t]={i:t,l:!1,exports:{}};return I[t].call(C.exports,C,C.exports,n),C.l=!0,C.exports}n.m=I,n.c=g,n.d=function(I,g,t){n.o(I,g)||Object.defineProperty(I,g,{configurable:!1,enumerable:!0,get:t})},n.r=function(I){Object.defineProperty(I,"__esModule",{value:!0})},n.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(g,"a",g),g},n.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},n.p="",n(n.s=1)}([function(module,exports,__webpack_require__){eval('(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse { var i, a; }\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2017 Karl STEIN\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar hooks = {};\n\nvar Events = {\n    addEvent: function addEvent(event, callback) {\n        if (typeof event !== "string") {\n            throw new Error("event is not a string");\n        }\n        if (typeof callback !== "function") {\n            throw new Error("callback is not a function");\n        }\n        if (!(hooks[event] instanceof Array)) {\n            hooks[event] = [];\n        }\n        hooks[event].push(callback);\n    },\n    removeEvent: function removeEvent(event, callback) {\n        if (hooks[event] instanceof Array) {\n            var index = hooks[event].indexOf(callback);\n\n            if (index !== -1) {\n                hooks[event].splice(index, 1);\n            }\n        }\n    },\n    triggerEvent: function triggerEvent() {\n        var event = arguments[0];\n        var thisObj = arguments[1];\n\n        if (hooks.hasOwnProperty(event)) {\n            for (var i = 0; i < hooks[event].length; i += 1) {\n                hooks[event][i].call(thisObj);\n            }\n        }\n    }\n};\n\nvar Route = exports.Route = function () {\n    function Route(path, options) {\n        _classCallCheck(this, Route);\n\n        options = options || {};\n\n        /**\n         * Route callback\n         * @type {function|null}\n         */\n        this.action = options.action;\n\n        /**\n         * Route events\n         * @type {{}}\n         */\n        this.events = {};\n\n        /**\n         * Route name\n         * @type {string|null}\n         */\n        this.name = options.name;\n\n        /**\n         * Route params\n         * @type {null}\n         */\n        this.params = null;\n\n        /**\n         * Route path\n         * @type {string}\n         */\n        this.path = path;\n\n        /**\n         * The router object\n         * @type {Router}\n         */\n        this.router = options.router;\n    }\n\n    /**\n     * Hooks a callback to an event\n     * @param event\n     * @param callback\n     */\n\n\n    _createClass(Route, [{\n        key: "on",\n        value: function on(event, callback) {\n            switch (event) {\n                case "leave":\n                    this.events.leave = callback;\n                    break;\n            }\n        }\n\n        /**\n         * Redirects to another route\n         * @param path\n         */\n\n    }, {\n        key: "redirect",\n        value: function redirect(path) {\n            this.router.go(path);\n        }\n\n        /**\n         * Renders a route content\n         * @param content\n         * @param options\n         */\n\n    }, {\n        key: "render",\n        value: function render(content, options) {\n            options = options || {};\n            var route = this;\n            var data = {};\n            var target = options.target || this.router.getTarget();\n\n            // Find the target element\n            if (typeof target === "string") {\n                target = document.getElementById(target);\n            }\n            // Check target\n            if (!(target instanceof Element)) {\n                throw new Error("Target is not valid for route : " + route.path);\n            }\n\n            // Merge data\n            if (options.data) {\n                if (typeof options.data === "function") {\n                    data = options.data.call(route);\n                } else if (_typeof(options.data) === "object") {\n                    for (var key in options.data) {\n                        if (options.data.hasOwnProperty(key)) {\n                            data.key = options.data[key];\n                        }\n                    }\n                }\n            }\n\n            // Execute before render callbacks\n            Events.triggerEvent("beforeRender", this);\n\n            // Remove the previous content\n            target.innerHTML = "";\n\n            // Render the template\n            this.router.render.call(route, content, data, target);\n\n            // Update all links in the page\n            this.router.parseLinks();\n\n            // Execute before render callbacks\n            Events.triggerEvent("afterRender", this);\n        }\n    }]);\n\n    return Route;\n}();\n\nvar Router = exports.Router = {\n    /**\n     * Render the current path when the page is loaded\n     * @type {boolean}\n     */\n    autoRun: true,\n\n    /**\n     * The current route\n     * @type {Route}\n     */\n    currentRoute: null,\n\n    /**\n     * Is router enabled\n     * @type {boolean}\n     */\n    enabled: true,\n\n    /**\n     * The previous path of the router\n     * @type {Array}\n     */\n    history: [],\n\n    /**\n     * The maximum path that the router should keep in memory\n     * @type {number}\n     */\n    historyLimit: 10,\n\n    /**\n     * The page not found content\n     * @type {function}\n     */\n    notFound: null,\n\n    /**\n     * Is router refreshing\n     * @type {boolean}\n     */\n    redirecting: false,\n\n    /**\n     * The routes\n     * @type {{}}\n     */\n    routes: {},\n\n    /**\n     * The target element where the router will render the page\n     * @type {string}\n     */\n    target: "yield",\n\n    /**\n     * A route\n     * @type {Route}\n     */\n    Route: Route,\n\n    /**\n     * Disables router\n     */\n    disable: function disable() {\n        this.enabled = false;\n    },\n\n\n    /**\n     * Enables router\n     */\n    enable: function enable() {\n        this.enabled = true;\n    },\n\n\n    /**\n     * Checks if the route exists\n     * @param path\n     * @return {boolean}\n     */\n    exists: function exists(path) {\n        return this.routes[path] instanceof Route;\n    },\n\n\n    /**\n     * Returns the current route\n     * @return {Route}\n     */\n    getCurrentRoute: function getCurrentRoute() {\n        return this.currentRoute;\n    },\n\n\n    /**\n     * Returns the last path\n     * @return {string|null}\n     */\n    getLastPath: function getLastPath() {\n        var historySize = this.history.length;\n\n        if (historySize > 0) {\n            return this.history[historySize - 1];\n        }\n        return null;\n    },\n\n\n    /**\n     * Returns all routes\n     * @return {{}}\n     */\n    getRoutes: function getRoutes() {\n        return this.routes;\n    },\n\n\n    /**\n     * Returns router target\n     * @return {string}\n     */\n    getTarget: function getTarget() {\n        return this.target;\n    },\n\n\n    /**\n     * Changes the current path\n     * @param path\n     * @todo allow to pass params\n     */\n    go: function go(path) {\n        this.redirecting = true;\n        window.location.hash = "#" + path;\n    },\n\n\n    /**\n     * Goes to the last path\n     */\n    goBack: function goBack() {\n        this.history.pop();\n        var path = this.history.pop();\n        if (path) this.go(path);\n    },\n\n\n    /**\n     * Returns router history\n     * @return {Array}\n     */\n    getHistory: function getHistory() {\n        return this.history;\n    },\n\n\n    /**\n     * Is router enabled\n     * @return {boolean}\n     */\n    isEnabled: function isEnabled() {\n        return this.enabled === true;\n    },\n\n\n    /**\n     * Is router redirecting\n     * @return {boolean}\n     */\n    isRedirecting: function isRedirecting() {\n        return this.redirecting === true;\n    },\n\n\n    /**\n     * Removes a callback from an event\n     * @param event\n     * @param callback\n     */\n    off: function off(event, callback) {\n        Events.removeEvent(event, callback);\n    },\n\n\n    /**\n     * Adds a callback to an event\n     * @param event\n     * @param callback\n     */\n    on: function on(event, callback) {\n        Events.addEvent(event, callback);\n    },\n\n\n    /**\n     * Returns the path of the named route\n     * @param name\n     * @param params\n     * @return {*}\n     */\n    path: function path(name, params) {\n        for (var path in this.routes) {\n            if (this.routes.hasOwnProperty(path) && this.routes[path].name === name) {\n                if (params && (typeof params === "undefined" ? "undefined" : _typeof(params)) === "object") {\n                    path = path.replace(/:([a-zA-Z0-9_]+)/g, function (match, arg) {\n                        return params[arg];\n                    });\n                }\n                return path;\n            }\n        }\n        return null;\n    },\n\n\n    /**\n     * Updates active links\n     */\n    parseLinks: function parseLinks() {\n        var links = document.body.querySelectorAll("a.active");\n\n        for (var i = 0; i < links.length; i += 1) {\n            links[i].className = links[i].className.replace("active", "");\n        }\n\n        links = document.body.querySelectorAll("a[href=\\"" + location.hash + "\\"]");\n\n        for (var _i = 0; _i < links.length; _i += 1) {\n            links[_i].className += " active";\n        }\n    },\n\n\n    /**\n     * Refreshes the route\n     */\n    refresh: function refresh() {\n        var self = this;\n\n        // Ignore if router is disabled\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the current hash\n        var path = window.location.hash.replace(/^#/, "");\n\n        if (!path) {\n            if (self.exists("/")) {\n                self.go("/");\n            }\n        } else {\n            var route = null;\n\n            // Reset redirection status\n            this.redirecting = false;\n\n            if (self.exists(path)) {\n                // Update current route\n                route = self.routes[path];\n            } else {\n                // Check if it is a dynamic route\n                for (var tmpPath in self.routes) {\n                    if (self.routes.hasOwnProperty(tmpPath) && tmpPath.indexOf(":") !== -1) {\n                        var varPattern = new RegExp(tmpPath.replace(new RegExp(":[^/]+", "g"), ":([^/]+)"));\n                        var valuePattern = new RegExp(tmpPath.replace(new RegExp(":[^/]+", "g"), "([^/]+)"));\n                        var keys = varPattern.exec(tmpPath);\n                        var values = valuePattern.exec(path);\n\n                        if (keys && keys.length > 1 && values && values.length === keys.length) {\n                            keys.shift();\n                            values.shift();\n\n                            // Update current route\n                            route = self.routes[tmpPath];\n                            route.params = {};\n\n                            for (var j in keys) {\n                                if (keys.hasOwnProperty(j)) {\n                                    if (/[0-9]+/.test(j)) {\n                                        route.params[keys[j]] = values[j];\n                                    } else {\n                                        break;\n                                    }\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (!route) {\n                console.error("No route defined for " + path);\n\n                if (typeof self.notFound === "function") {\n                    route = new Route(path, {\n                        name: "notFound",\n                        action: self.notFound,\n                        router: self\n                    });\n                } else if (self.notFound instanceof Route) {\n                    self.notFound.router = self;\n                    route = self.notFound;\n                }\n            } else {\n                Events.triggerEvent("route", route);\n            }\n\n            var previousPath = self.history.pop();\n            var currentRoute = self.getCurrentRoute();\n\n            // Execute the previous route leave event\n            if (previousPath !== path && currentRoute && typeof currentRoute.events.leave === "function") {\n                var result = currentRoute.events.leave.call(currentRoute);\n\n                if (result === false) {\n                    self.disable();\n                    window.location.hash = "#" + previousPath;\n                    setTimeout(self.enable, 100);\n                    return false;\n                }\n            }\n\n            // Add the route in the history\n            if (self.getLastPath() !== path) {\n                self.history.push(path);\n            }\n\n            // Update the current route\n            self.currentRoute = route;\n\n            // Execute the route callback\n            self.currentRoute.action.call(self.currentRoute);\n        }\n    },\n\n\n    /**\n     * This method renders the content of the route into the page\n     * within the specified target element\n     * @param content\n     * @param data\n     * @param target\n     */\n    render: function render(content, data, target) {\n        if (typeof target === "string") {\n            target = document.getElementById(target);\n        }\n        if ((typeof target === "undefined" ? "undefined" : _typeof(target)) === "object") {\n            if (target instanceof Element) {\n                target.innerHTML = content;\n            }\n        }\n    },\n\n\n    /**\n     * Declares a route\n     * @param path\n     * @param options\n     * @param deprecated_options\n     */\n    route: function route(path, options, deprecated_options) {\n        // Old signature\n        if (typeof options === "function") {\n            console.warn("Router.route(string, function, object) is deprecated, use Router.route(string, options) instead");\n            deprecated_options = deprecated_options || {};\n            deprecated_options.action = options;\n            options = deprecated_options;\n        }\n\n        // Pass the router to the route\n        options.router = this;\n\n        // Creates a new route\n        this.routes[path] = new Route(path, options);\n    }\n};\n\nif ((typeof document === "undefined" ? "undefined" : _typeof(document)) === "object" && document !== null) {\n    // Render the path when the DOM is ready\n    document.addEventListener("DOMContentLoaded", function () {\n        if (Router.autoRun) {\n            Router.refresh();\n        }\n        // Watch any changes in the path\n        window.addEventListener("hashchange", function (ev) {\n            if (!Router.refresh()) {\n                ev.preventDefault();\n                return false;\n            }\n        });\n    });\n}\n\n// Expose global variable\nif ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window !== null) {\n    window.Router = Router;\n}\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./spreadSheetSending.js\nconst addSpreadSheetEvents = () => {\r\n  let list = [];\r\n  document.querySelectorAll(".choice").forEach(node =>\r\n    node.addEventListener("click", e => {\r\n      list.push(e.target.textContent);\r\n      console.log(list);\r\n    })\r\n  );\r\n  document.getElementById("input").addEventListener("click", () => {\r\n    document.getElementById("path").value = list.toString().replace(/\\,/g, \' ▶ \');\r\n    list = [];\r\n  });\r\n}\r\n\r\n/* harmony default export */ var spreadSheetSending = (addSpreadSheetEvents);\r\n\n// EXTERNAL MODULE: ./node_modules/jk-router/dist/jk-router.js\nvar jk_router = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./routing.js\n\r\n\r\nconst routing_router = () => {\r\n  const removeActiveFromLinks = () => {\r\n    document.querySelectorAll("ul").forEach(item => {\r\n      item.classList.remove("active")\r\n    })\r\n  }\r\n  const base = window.location.origin + "/survey/"\r\n  const removeDisabledFromLinks = () => {\r\n    document.querySelectorAll(".final").forEach(node => {\r\n      node.classList.remove("disabled")\r\n    })\r\n  }\r\n  jk_router["Router"].route(base, {\r\n      name: "home",\r\n      action() {\r\n        this.render(`<h1>Welcome to our Survey!</h1><br><p>This will only take 5 years to fill out, please begin by filling in your name.</p>`, {\r\n          target: "content"\r\n        })\r\n      }\r\n  });\r\n  jk_router["Router"].route(base + "/question1", {\r\n      name: "question1",\r\n      action() {\r\n        removeActiveFromLinks();\r\n        removeDisabledFromLinks();\r\n        document.getElementById("tree-main").style.display = "block"\r\n        document.getElementById("form-inputs").style.display = "none"\r\n        document.getElementById("input").textContent = "Next Question"\r\n        this.render(`<h1>Question 1:</h1><br><p>If you were looking for information about assessment, where do you think you would find it?</p>`, {\r\n          target: "content"\r\n        })\r\n      }\r\n  });\r\n  jk_router["Router"].route(base + "/question2", {\r\n      name: "question2",\r\n      action() {\r\n        removeActiveFromLinks();\r\n        removeDisabledFromLinks();\r\n        this.render(`<h1>Question 2:</h1><br><p>If you were looking for information about mentoring, where do you think you would find it?</p>`, {\r\n          target: "content"\r\n        })\r\n      }\r\n  });\r\n  jk_router["Router"].route(base + "/question3", {\r\n      name: "question3",\r\n      action() {\r\n        removeActiveFromLinks();\r\n        removeDisabledFromLinks();\r\n        this.render(`<h1>Question 3:</h1><br><p>If you were looking for a case study from Ghana, where do you think you would find it?</p>`, {\r\n          target: "content"\r\n        })\r\n      }\r\n  });\r\n  jk_router["Router"].route(base + "/thankyou", {\r\n      name: "thankyou",\r\n      action() {\r\n        document.getElementById("tree-main").style.display = "none";\r\n        document.getElementById("input").style.display = "none";\r\n        this.render(`<h1>Thank You!</h1><br><p>Thanks for taking the time to complete our survey, your answers have been saved. You may now exit this tab. <br> For more information, please visit <a href="#">this site</a>.</p>`, {\r\n          target: "content"\r\n        })\r\n      }\r\n  });\r\n}\r\n\r\n/* harmony default export */ var routing = (routing_router);\r\n\n// CONCATENATED MODULE: ./app.js\n\r\n\r\n\r\nspreadSheetSending();\r\nrouting();\r\n\r\n\r\n//TO DO\r\n//Route the rest of the questions\r\n//Hide the input buttons after the first page\r\n//Hide the dropdown on the first page\r\n//Make the input look better --\x3e Bootsrap?\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NwcmVhZFNoZWV0U2VuZGluZy5qcz83YTA5Iiwid2VicGFjazovLy8uL3JvdXRpbmcuanM/YWE2MyIsIndlYnBhY2s6Ly8vLi9hcHAuanM/OWE3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhZGRTcHJlYWRTaGVldEV2ZW50cyA9ICgpID0+IHtcclxuICBsZXQgbGlzdCA9IFtdO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2hvaWNlXCIpLmZvckVhY2gobm9kZSA9PlxyXG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB7XHJcbiAgICAgIGxpc3QucHVzaChlLnRhcmdldC50ZXh0Q29udGVudCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGxpc3QpO1xyXG4gICAgfSlcclxuICApO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5wdXRcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGF0aFwiKS52YWx1ZSA9IGxpc3QudG9TdHJpbmcoKS5yZXBsYWNlKC9cXCwvZywgJyDilrYgJyk7XHJcbiAgICBsaXN0ID0gW107XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFkZFNwcmVhZFNoZWV0RXZlbnRzO1xyXG4iLCJpbXBvcnQge1JvdXRlcn0gZnJvbSBcImprLXJvdXRlclwiO1xyXG5cclxuY29uc3Qgcm91dGVyID0gKCkgPT4ge1xyXG4gIGNvbnN0IHJlbW92ZUFjdGl2ZUZyb21MaW5rcyA9ICgpID0+IHtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJ1bFwiKS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIilcclxuICAgIH0pXHJcbiAgfVxyXG4gIGNvbnN0IGJhc2UgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgXCIvc3VydmV5L1wiXHJcbiAgY29uc3QgcmVtb3ZlRGlzYWJsZWRGcm9tTGlua3MgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZpbmFsXCIpLmZvckVhY2gobm9kZSA9PiB7XHJcbiAgICAgIG5vZGUuY2xhc3NMaXN0LnJlbW92ZShcImRpc2FibGVkXCIpXHJcbiAgICB9KVxyXG4gIH1cclxuICBSb3V0ZXIucm91dGUoYmFzZSwge1xyXG4gICAgICBuYW1lOiBcImhvbWVcIixcclxuICAgICAgYWN0aW9uKCkge1xyXG4gICAgICAgIHRoaXMucmVuZGVyKGA8aDE+V2VsY29tZSB0byBvdXIgU3VydmV5ITwvaDE+PGJyPjxwPlRoaXMgd2lsbCBvbmx5IHRha2UgNSB5ZWFycyB0byBmaWxsIG91dCwgcGxlYXNlIGJlZ2luIGJ5IGZpbGxpbmcgaW4geW91ciBuYW1lLjwvcD5gLCB7XHJcbiAgICAgICAgICB0YXJnZXQ6IFwiY29udGVudFwiXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gIH0pO1xyXG4gIFJvdXRlci5yb3V0ZShiYXNlICsgXCIvcXVlc3Rpb24xXCIsIHtcclxuICAgICAgbmFtZTogXCJxdWVzdGlvbjFcIixcclxuICAgICAgYWN0aW9uKCkge1xyXG4gICAgICAgIHJlbW92ZUFjdGl2ZUZyb21MaW5rcygpO1xyXG4gICAgICAgIHJlbW92ZURpc2FibGVkRnJvbUxpbmtzKCk7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmVlLW1haW5cIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIlxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybS1pbnB1dHNcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbnB1dFwiKS50ZXh0Q29udGVudCA9IFwiTmV4dCBRdWVzdGlvblwiXHJcbiAgICAgICAgdGhpcy5yZW5kZXIoYDxoMT5RdWVzdGlvbiAxOjwvaDE+PGJyPjxwPklmIHlvdSB3ZXJlIGxvb2tpbmcgZm9yIGluZm9ybWF0aW9uIGFib3V0IGFzc2Vzc21lbnQsIHdoZXJlIGRvIHlvdSB0aGluayB5b3Ugd291bGQgZmluZCBpdD88L3A+YCwge1xyXG4gICAgICAgICAgdGFyZ2V0OiBcImNvbnRlbnRcIlxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICB9KTtcclxuICBSb3V0ZXIucm91dGUoYmFzZSArIFwiL3F1ZXN0aW9uMlwiLCB7XHJcbiAgICAgIG5hbWU6IFwicXVlc3Rpb24yXCIsXHJcbiAgICAgIGFjdGlvbigpIHtcclxuICAgICAgICByZW1vdmVBY3RpdmVGcm9tTGlua3MoKTtcclxuICAgICAgICByZW1vdmVEaXNhYmxlZEZyb21MaW5rcygpO1xyXG4gICAgICAgIHRoaXMucmVuZGVyKGA8aDE+UXVlc3Rpb24gMjo8L2gxPjxicj48cD5JZiB5b3Ugd2VyZSBsb29raW5nIGZvciBpbmZvcm1hdGlvbiBhYm91dCBtZW50b3JpbmcsIHdoZXJlIGRvIHlvdSB0aGluayB5b3Ugd291bGQgZmluZCBpdD88L3A+YCwge1xyXG4gICAgICAgICAgdGFyZ2V0OiBcImNvbnRlbnRcIlxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICB9KTtcclxuICBSb3V0ZXIucm91dGUoYmFzZSArIFwiL3F1ZXN0aW9uM1wiLCB7XHJcbiAgICAgIG5hbWU6IFwicXVlc3Rpb24zXCIsXHJcbiAgICAgIGFjdGlvbigpIHtcclxuICAgICAgICByZW1vdmVBY3RpdmVGcm9tTGlua3MoKTtcclxuICAgICAgICByZW1vdmVEaXNhYmxlZEZyb21MaW5rcygpO1xyXG4gICAgICAgIHRoaXMucmVuZGVyKGA8aDE+UXVlc3Rpb24gMzo8L2gxPjxicj48cD5JZiB5b3Ugd2VyZSBsb29raW5nIGZvciBhIGNhc2Ugc3R1ZHkgZnJvbSBHaGFuYSwgd2hlcmUgZG8geW91IHRoaW5rIHlvdSB3b3VsZCBmaW5kIGl0PzwvcD5gLCB7XHJcbiAgICAgICAgICB0YXJnZXQ6IFwiY29udGVudFwiXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gIH0pO1xyXG4gIFJvdXRlci5yb3V0ZShiYXNlICsgXCIvdGhhbmt5b3VcIiwge1xyXG4gICAgICBuYW1lOiBcInRoYW5reW91XCIsXHJcbiAgICAgIGFjdGlvbigpIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyZWUtbWFpblwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbnB1dFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgdGhpcy5yZW5kZXIoYDxoMT5UaGFuayBZb3UhPC9oMT48YnI+PHA+VGhhbmtzIGZvciB0YWtpbmcgdGhlIHRpbWUgdG8gY29tcGxldGUgb3VyIHN1cnZleSwgeW91ciBhbnN3ZXJzIGhhdmUgYmVlbiBzYXZlZC4gWW91IG1heSBub3cgZXhpdCB0aGlzIHRhYi4gPGJyPiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0IDxhIGhyZWY9XCIjXCI+dGhpcyBzaXRlPC9hPi48L3A+YCwge1xyXG4gICAgICAgICAgdGFyZ2V0OiBcImNvbnRlbnRcIlxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG4iLCJpbXBvcnQgYWRkU3ByZWFkU2hlZXRFdmVudHMgZnJvbSAnLi9zcHJlYWRTaGVldFNlbmRpbmcnXHJcbmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0aW5nJ1xyXG5cclxuYWRkU3ByZWFkU2hlZXRFdmVudHMoKTtcclxucm91dGVyKCk7XHJcblxyXG5cclxuLy9UTyBET1xyXG4vL1JvdXRlIHRoZSByZXN0IG9mIHRoZSBxdWVzdGlvbnNcclxuLy9IaWRlIHRoZSBpbnB1dCBidXR0b25zIGFmdGVyIHRoZSBmaXJzdCBwYWdlXHJcbi8vSGlkZSB0aGUgZHJvcGRvd24gb24gdGhlIGZpcnN0IHBhZ2VcclxuLy9NYWtlIHRoZSBpbnB1dCBsb29rIGJldHRlciAtLT4gQm9vdHNyYXA/XHJcbiJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNuRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')}]);